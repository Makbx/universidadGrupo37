/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package universidadGrupo37.vistas;

import javax.swing.table.DefaultTableModel;
import universidadGrupo37.entidades.Alumno;
import universidadGrupo37.entidades.Inscripcion;
import universidadGrupo37.entidades.Materia;

/**
 *
 * @author crist
 */
public class FormulariodeInscripciones extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormulariodeInscripciones
     */
    private DefaultTableModel modelo=new DefaultTableModel(){
        
    public boolean isCellEditable(int c, int f){
            return false;
        }
    };
    private Alumno alumnoSelec;
    
    public FormulariodeInscripciones() {
        initComponents();
        armarCabecera();
        cargarCombo();
        JBinscribir.setEnabled(false);
        JBanularInscripcion.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        CBalumnos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        RBmateriasInscriptas = new javax.swing.JRadioButton();
        RBmateriaNoInscriptas = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTmaterias = new javax.swing.JTable();
        JBinscribir = new javax.swing.JButton();
        JBanularInscripcion = new javax.swing.JButton();
        JBsalir = new javax.swing.JButton();

        jLabel1.setText("Formulario de Inscripcion");

        jLabel2.setText("Seleccione un alumno:");

        CBalumnos.setToolTipText("");
        CBalumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBalumnosActionPerformed(evt);
            }
        });

        jLabel3.setText("Listado de Materias");

        RBmateriasInscriptas.setText("Materias Inscriptas");
        RBmateriasInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBmateriasInscriptasActionPerformed(evt);
            }
        });

        RBmateriaNoInscriptas.setText("Materias no Inscriptas");
        RBmateriaNoInscriptas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RBmateriaNoInscriptasActionPerformed(evt);
            }
        });

        JTmaterias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(JTmaterias);

        JBinscribir.setText("Inscribir");
        JBinscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBinscribirActionPerformed(evt);
            }
        });

        JBanularInscripcion.setText("Anular Inscripcion");
        JBanularInscripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBanularInscripcionActionPerformed(evt);
            }
        });

        JBsalir.setText("Salir");
        JBsalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JBsalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(JBinscribir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(JBanularInscripcion)
                .addGap(73, 73, 73)
                .addComponent(JBsalir)
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(RBmateriasInscriptas)
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(110, 110, 110)
                        .addComponent(RBmateriaNoInscriptas)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CBalumnos, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(CBalumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RBmateriasInscriptas)
                    .addComponent(RBmateriaNoInscriptas))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JBinscribir)
                    .addComponent(JBanularInscripcion)
                    .addComponent(JBsalir))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CBalumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBalumnosActionPerformed
        // TODO add your handling code here:
        alumnoSelec = (Alumno) CBalumnos.getSelectedItem();
        limpiarTabla();
        if(RBmateriasInscriptas.isSelected()){
            cargarCursadas(alumnoSelec.getIdAlumno());
        }else if(RBmateriaNoInscriptas.isSelected()){
            cargarNoCursadas(alumnoSelec.getIdAlumno());
        }
    }//GEN-LAST:event_CBalumnosActionPerformed

    private void RBmateriasInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBmateriasInscriptasActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        JBanularInscripcion.setEnabled(true);
        JBinscribir.setEnabled(false);
        RBmateriaNoInscriptas.setSelected(false);
        int id = alumnoSelec.getIdAlumno();
        cargarCursadas(id);
    }//GEN-LAST:event_RBmateriasInscriptasActionPerformed

    private void RBmateriaNoInscriptasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RBmateriaNoInscriptasActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        JBinscribir.setEnabled(true);
        JBanularInscripcion.setEnabled(false);
        RBmateriasInscriptas.setSelected(false);
        int id = alumnoSelec.getIdAlumno();
        cargarNoCursadas(id);
    }//GEN-LAST:event_RBmateriaNoInscriptasActionPerformed

    private void JBsalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBsalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_JBsalirActionPerformed

    private void JBinscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBinscribirActionPerformed
        // TODO add your handling code here:
        int fila = JTmaterias.getSelectedRow();
        if(fila != -1){
            int idMateria = (int) modelo.getValueAt(fila, 0);
            Materia materiaSelec = Menu.materiadata.buscarMateria(idMateria);
            Inscripcion ins = new Inscripcion(alumnoSelec, materiaSelec, 0.0);
            Menu.inscripciondata.guardarInscripcion(ins);
            limpiarTabla();
            int id = alumnoSelec.getIdAlumno();
            cargarNoCursadas(id);
        }
        
    }//GEN-LAST:event_JBinscribirActionPerformed

    private void JBanularInscripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JBanularInscripcionActionPerformed
        // TODO add your handling code here:
        int fila = JTmaterias.getSelectedRow();
        if(fila != -1){
            int idMateria = (int) modelo.getValueAt(fila, 0);
            int idAlumno = alumnoSelec.getIdAlumno();
            Menu.inscripciondata.borrarInscripcionMateriaAlumno(idAlumno, idMateria);
            limpiarTabla();
            int id = alumnoSelec.getIdAlumno();
            //cargarNoCursadas(id);
            cargarCursadas(id);
        }
    }//GEN-LAST:event_JBanularInscripcionActionPerformed

    private void armarCabecera(){
        modelo.addColumn("Id");
        modelo.addColumn("Nombre");
        modelo.addColumn("Año");
        
        JTmaterias.setModel(modelo);
        
    }
    private void cargarCombo() {
        for (Alumno alu : Menu.alumnodata.listarAlumnos()) {
            CBalumnos.addItem(alu);
        }
    }
    private void limpiarTabla(){
        int f = JTmaterias.getRowCount() - 1;
        for (; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }
    private void cargarCursadas(int id){
        for (Materia materia : Menu.inscripciondata.obtenerMateriasCursadas(id)) {
                modelo.addRow(new Object[]{
                    materia.getIdMateria(),
                    materia.getNombre(),
                    materia.getAnioMateria()
                });
        }
    }
    private void cargarNoCursadas(int id){
        for (Materia materia : Menu.inscripciondata.obtenerMateriasNOCursadas(id)) {
            modelo.addRow(new Object[]{
                materia.getIdMateria(),
                materia.getNombre(),
                materia.getAnioMateria()
            });
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Alumno> CBalumnos;
    private javax.swing.JButton JBanularInscripcion;
    private javax.swing.JButton JBinscribir;
    private javax.swing.JButton JBsalir;
    private javax.swing.JTable JTmaterias;
    private javax.swing.JRadioButton RBmateriaNoInscriptas;
    private javax.swing.JRadioButton RBmateriasInscriptas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
